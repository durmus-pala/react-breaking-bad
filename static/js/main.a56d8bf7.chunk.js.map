{"version":3,"sources":["components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","item","className","src","img","alt","name","nickname","birthday","status","App","useState","itemList","setItemList","useEffect","fetch","then","response","json","data","map","char_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAuCeA,EAdF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKC,IAAI,KACxB,sBAAKH,UAAU,YAAf,UACE,6BAAKD,EAAKK,OACV,6BAAKL,EAAKM,WACV,4BAAIN,EAAKO,WACT,4BAAIP,EAAKQ,gBCNFC,MAxBf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OALAC,qBAAU,WACRC,MAAM,iDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAAYM,QAC7B,IAED,sBAAKjB,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,qBACEC,IAAI,mFACJE,IAAI,wBAGR,qBAAKH,UAAU,QAAf,gBACGU,QADH,IACGA,OADH,EACGA,EAAUQ,KAAI,SAACnB,GAAD,OACb,cAAC,EAAD,CAAyBA,KAAMA,GAApBA,EAAKoB,kBCRXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a56d8bf7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// {\r\n//   \"char_id\": 1,\r\n//   \"name\": \"Walter White\",\r\n//   \"birthday\": \"09-07-1958\",\r\n//   \"occupation\": [\r\n//       \"High School Chemistry Teacher\",\r\n//       \"Meth King Pin\"\r\n//   ],\r\n//   \"img\": \"https://images.amcnetworks.com/amc.com/wp-content/uploads/2015/04/cast_bb_700x1000_walter-white-lg.jpg\",\r\n//   \"status\": \"Presumed dead\",\r\n//   \"nickname\": \"Heisenberg\",\r\n//   \"appearance\": [\r\n//       1,\r\n//       2,\r\n//       3,\r\n//       4,\r\n//       5\r\n//   ],\r\n//   \"portrayed\": \"Bryan Cranston\",\r\n//   \"category\": \"Breaking Bad\",\r\n//   \"better_call_saul_appearance\": []\r\n// },\r\n\r\nconst Card = ({ item }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={item.img} alt=\"\" />\r\n      <div className=\"card-info\">\r\n        <h1>{item.name}</h1>\r\n        <h3>{item.nickname}</h3>\r\n        <p>{item.birthday}</p>\r\n        <p>{item.status}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./components/Card\";\r\n// import data from \"./data.json\";\r\nfunction App() {\r\n  const [itemList, setItemList] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://www.breakingbadapi.com/api/characters\")\r\n      .then((response) => response.json())\r\n      .then((data) => setItemList(data));\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n        <img\r\n          src=\"https://www.logolynx.com/images/logolynx/55/55a537ca9549600cf7d1d0b274b3bc61.png\"\r\n          alt=\"Breaking Bad Logo\"\r\n        />\r\n      </header>\r\n      <div className=\"cards\">\r\n        {itemList?.map((item) => (\r\n          <Card key={item.char_id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}